[{"content":"컴포넌트의 라이프사이클 컴포넌트는 사람처럼 태어나고 죽음 상세 페이지로 이동 시 Detail 컴포넌트가 보인다 페이지에 장착되기도 하고(mount) 가끔 업데이트도 되고(update) 메인 페이지로 이동 시 필요없으면 제거된다(unmount) 라이프사이클을 알아야 하는 이유 위 표기된 라이프사이클 중간중간에 간섭을 할 수 있음 라이프사이클 중간중간 코드실행가능 라이프사이클훅 컴포넌트 라이프사이클에 갈고리를 건다고 연상하면 이해가 쉬움 훅에 실행할코드를 담아 라이프사이클에 훅을 건다 생각하면 쉬움 컴포넌트에 갈고리 다는 법 클래스 방식 class Detail extends React.Component { componentDidMount() { } componentDidUpdate() { } componentWillUnmount() { } } 함수방식 import { useEffect } from \u0026#34;react\u0026#34;; function Detail() { useEffect(() =\u0026gt; { // mount, update 시 여기 코드 실행됨 }); } Q. 컴포넌트 렌더링 시 내부 함수 실행되는데 라이프 사이클 쓰는 이유 A. 라이프사이클훅 내부의 코드는 html 렌더링 후에 동작함 Q. 왜 이름이 Effect~~ 인지 Side Effect: 함수의 핵심기능과 상관없는 부가기능. 여기에서 따온 이름 useEffect 안에 적는 코드들은 어려운 연산 서버에서 데이터가져오는 작업 타이머 장착하는거 ","permalink":"https://rlawjddbs.github.io/posts/react/2024-05-09/lifecycle_of_react_component/","summary":"\u003ch2 id=\"컴포넌트의-라이프사이클\"\u003e컴포넌트의 라이프사이클\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e컴포넌트는 사람처럼 태어나고 죽음\u003c/li\u003e\n\u003cli\u003e상세 페이지로 이동 시 Detail 컴포넌트가 보인다\n\u003cul\u003e\n\u003cli\u003e페이지에 장착되기도 하고(mount)\u003c/li\u003e\n\u003cli\u003e가끔 업데이트도 되고(update)\u003c/li\u003e\n\u003cli\u003e메인 페이지로 이동 시 필요없으면 제거된다(unmount)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"라이프사이클을-알아야-하는-이유\"\u003e라이프사이클을 알아야 하는 이유\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e위 표기된 라이프사이클 중간중간에 간섭을 할 수 있음\n\u003cul\u003e\n\u003cli\u003e라이프사이클 중간중간 코드실행가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"라이프사이클훅\"\u003e라이프사이클훅\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e컴포넌트 라이프사이클에 갈고리를 건다고 연상하면 이해가 쉬움\u003c/li\u003e\n\u003cli\u003e훅에 실행할코드를 담아 라이프사이클에 훅을 건다 생각하면 쉬움\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"컴포넌트에-갈고리-다는-법\"\u003e컴포넌트에 갈고리 다는 법\u003c/h2\u003e\n\u003ch3 id=\"클래스-방식\"\u003e클래스 방식\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDetail\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eReact\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eComponent\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ecomponentDidMount\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ecomponentDidUpdate\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ecomponentWillUnmount\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"함수방식\"\u003e함수방식\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e { \u003cspan style=\"color:#a6e22e\"\u003euseEffect\u003c/span\u003e } \u003cspan style=\"color:#a6e22e\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;react\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDetail\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003euseEffect\u003c/span\u003e(() =\u0026gt; {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// mount, update 시 여기 코드 실행됨\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003ch3 id=\"q-컴포넌트-렌더링-시-내부-함수-실행되는데-라이프-사이클-쓰는-이유\"\u003eQ. 컴포넌트 렌더링 시 내부 함수 실행되는데 라이프 사이클 쓰는 이유\u003c/h3\u003e\n\u003ch4 id=\"a-라이프사이클훅-내부의-코드는-html-렌더링-후에-동작함\"\u003eA. 라이프사이클훅 내부의 코드는 html 렌더링 후에 동작함\u003c/h4\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003ch3 id=\"q-왜-이름이-effect-인지\"\u003eQ. 왜 이름이 Effect~~ 인지\u003c/h3\u003e\n\u003ch4 id=\"side-effect-함수의-핵심기능과-상관없는-부가기능-여기에서-따온-이름\"\u003eSide Effect: 함수의 핵심기능과 상관없는 부가기능. 여기에서 따온 이름\u003c/h4\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"useeffect-안에-적는-코드들은\"\u003euseEffect 안에 적는 코드들은\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e어려운 연산\u003c/li\u003e\n\u003cli\u003e서버에서 데이터가져오는 작업\u003c/li\u003e\n\u003cli\u003e타이머 장착하는거\u003c/li\u003e\n\u003c/ul\u003e","title":"Lifecycle과 useEffect1"},{"content":"PL/SQL Procedural Language DBMS에서 제공하는 언어적인 요소 1. 작성구조 DECLARE 변수선언 BEGIN 코드작성 END; / PL/SQL 코드의 끝은 항상 슬래쉬/로 끝이 나야함 2. 저장 형식 파일명.sql 3. 실행 cmd/편집기 → @파일명.sql error 발생: 왜? 4. 화면출력 sqlplus -- 계정연결 set serveroutput on -- 출력설정 dbms_output.put_line(출력할 내용); -- 출력 후 줄 변경 dbms_output.put(출력할 내용) -- 출력 후 줄 변경 X 출력할 내용에는 변수, 문자열, 연산식, \u0026lsquo;문자열\u0026rsquo; 등등이 들어감 ","permalink":"https://rlawjddbs.github.io/posts/oracle/2022-07-27/plsql/","summary":"\u003ch1 id=\"plsql\"\u003ePL/SQL\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eProcedural Language\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDBMS\u003c/code\u003e에서 제공하는 언어적인 요소\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1-작성구조\"\u003e1. 작성구조\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eDECLARE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e변수선언\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eBEGIN\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e코드작성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eEND\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ePL/SQL 코드의 끝은 항상 슬래쉬\u003ccode\u003e/\u003c/code\u003e로 끝이 나야함\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-저장-형식\"\u003e2. 저장 형식\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e파일명.sql\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"3-실행\"\u003e3. 실행\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ecmd/편집기\u003c/code\u003e → \u003ccode\u003e@파일명.sql\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eerror 발생: 왜?\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"4-화면출력\"\u003e4. 화면출력\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esqlplus \u003cspan style=\"color:#75715e\"\u003e-- 계정연결\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e serveroutput \u003cspan style=\"color:#66d9ef\"\u003eon\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e-- 출력설정\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003edbms_output.put_line(\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e출력할\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e내용\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e-- 출력 후 줄 변경\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003edbms_output.put(\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e출력할\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e내용\u003c/span\u003e) \u003cspan style=\"color:#75715e\"\u003e-- 출력 후 줄 변경 X\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e출력할 내용에는 변수, 문자열, 연산식, \u0026lsquo;문자열\u0026rsquo; 등등이 들어감\u003c/li\u003e\n\u003c/ul\u003e","title":"PL/SQL1-변수, 연산자, 제어문"},{"content":"[프로시저에 대한 약식 설명]\n1. 프로시저 생성하기 create or replace (EDITIONABLE||NONEDITIONABLE) PROCEDURE GET_CODE_LIST ( IN_PARAM IN CLOB, OUT_CURSOR OUT SYS_REFCURSOR ) IS P_GRP_CD VARCHAR(30) := JSON_VALUE(IN_PARAM, \u0026#39;$.GRP_CD\u0026#39;); BEGIN OPEN OUT_CURSOR FOR SELECT DATA_CD, DATA_NM, GRP_CD FROM SYS_CD_MGMT WHERE GRP_CD = P_GRP_CD; END GET_CODE_LIST; EDITIONABLE || NONEDITIONABLE 옵션: ","permalink":"https://rlawjddbs.github.io/posts/mybatis/2022-07-21/mybatis_with_oracle_procedure_and_function/","summary":"\u003cp\u003e[\u003ca href=\"https://rlawjddbs.github.io/posts/oracle/2022-06-29/procedure/\"\u003e\u003cstrong\u003e프로시저에 대한 약식 설명\u003c/strong\u003e\u003c/a\u003e]\u003c/p\u003e\n\u003ch1 id=\"1-프로시저-생성하기\"\u003e1. 프로시저 생성하기\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ecreate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eor\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ereplace\u003c/span\u003e (EDITIONABLE\u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003eNONEDITIONABLE) \u003cspan style=\"color:#66d9ef\"\u003ePROCEDURE\u003c/span\u003e GET_CODE_LIST (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    IN_PARAM \u003cspan style=\"color:#66d9ef\"\u003eIN\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eCLOB\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    OUT_CURSOR \u003cspan style=\"color:#66d9ef\"\u003eOUT\u003c/span\u003e SYS_REFCURSOR\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eIS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    P_GRP_CD VARCHAR(\u003cspan style=\"color:#ae81ff\"\u003e30\u003c/span\u003e) :\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e JSON_VALUE(IN_PARAM, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$.GRP_CD\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eBEGIN\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eOPEN\u003c/span\u003e OUT_CURSOR \u003cspan style=\"color:#66d9ef\"\u003eFOR\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            DATA_CD,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            DATA_NM,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            GRP_CD\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            SYS_CD_MGMT\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            GRP_CD \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e P_GRP_CD;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eEND\u003c/span\u003e GET_CODE_LIST;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eEDITIONABLE || NONEDITIONABLE 옵션:\u003c/li\u003e\n\u003c/ul\u003e","title":"MyBatis에서 오라클 Procedure, Function 호출 및 반환값 받기"},{"content":"Procedure CREATE [OR REPLACE] PROCEDURE 프로시저명 (변수명 [IN/OUT] 데이터형, ...) IS 변수선언 BEGIN 코드작성 END; / IN: in parameter, 외부값(내부, 값을 저장 X) OUT: out parameter, 내부값(외부, 값을 저장 O) Cursor CURSOR 커서명 IS SELECT ZIPCODE, ... FROM ZIPCODE WHERE DONG LIKE I_DONG% -- error 단지 연산만 할거라면 함수를 쓰고, 쿼리까지 사용해야 한다면 프로시저를 사용한다.\nPackage 관련있는 function, procedure를 묶어 관리하는 객체 header와 body로 구성 user_procedures 테이블에서 조회가능 package로 묶여있는 function, procedure를 호출할 떄 header: package에 포함될 function, procedure의 목록 정의(body가 없으면 일을 할 수 없다.) body: header에 포함된 function, procedure의 실제 동작되는 코드를 정의 ","permalink":"https://rlawjddbs.github.io/posts/oracle/2022-06-29/procedure/","summary":"\u003ch1 id=\"procedure\"\u003eProcedure\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eCREATE\u003c/span\u003e [\u003cspan style=\"color:#66d9ef\"\u003eOR\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eREPLACE\u003c/span\u003e] \u003cspan style=\"color:#66d9ef\"\u003ePROCEDURE\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e프로시저명\u003c/span\u003e (\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e변수명\u003c/span\u003e [\u003cspan style=\"color:#66d9ef\"\u003eIN\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eOUT\u003c/span\u003e] \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e데이터형\u003c/span\u003e, ...)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eIS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e변수선언\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eBEGIN\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e코드작성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eEND\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eIN\u003c/code\u003e: in parameter, 외부값(내부, 값을 저장 X)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eOUT\u003c/code\u003e: out parameter, 내부값(외부, 값을 저장 O)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"cursor\"\u003eCursor\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eCURSOR\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e커서명\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eIS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        ZIPCODE,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        ZIPCODE\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        DONG \u003cspan style=\"color:#66d9ef\"\u003eLIKE\u003c/span\u003e I_DONG\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e-- error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e단지 연산만 할거라면 함수를 쓰고, 쿼리까지 사용해야 한다면 프로시저를 사용한다.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"package\"\u003ePackage\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e관련있는 \u003ccode\u003efunction\u003c/code\u003e, \u003ccode\u003eprocedure\u003c/code\u003e를 묶어 관리하는 객체\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eheader\u003c/code\u003e와 \u003ccode\u003ebody\u003c/code\u003e로 구성\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003euser_procedures\u003c/code\u003e 테이블에서 조회가능\u003c/li\u003e\n\u003cli\u003epackage로 묶여있는 function, procedure를 호출할 떄\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eheader: \u003ccode\u003epackage\u003c/code\u003e에 포함될 \u003ccode\u003efunction\u003c/code\u003e, \u003ccode\u003eprocedure\u003c/code\u003e의 목록 정의(\u003ccode\u003ebody\u003c/code\u003e가 없으면 일을 할 수 없다.)\u003c/li\u003e\n\u003cli\u003ebody: \u003ccode\u003eheader\u003c/code\u003e에 포함된 \u003ccode\u003efunction\u003c/code\u003e, \u003ccode\u003eprocedure\u003c/code\u003e의 실제 동작되는 코드를 정의\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e","title":"Procedure"},{"content":"compile 컴파일 할 경우 필요 runtime 런타임 때 필요 provided 컴파일 때 필요하긴 하지만 런타임 때는 JDK, 또는 컨테이너가 제공 서블릿이나 JSP 관련 API 같은 것 즉 WAS에서 제공하는 servlet-api.jar를 사용하는 경우에 해당 만약 운영환경에서 servlet-api.jar 중복으로 인한 문제가 발생한다면 꼭 provided로 바꿔줘야 함 system system은 provided와 유사하지만 JAR 파일을 직접 사용 이 때는 JAR 파일의 위치를 지정하는 systemPath 속성을 지정해야함!!! ex(pom.xml) ... \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;...\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;...\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;...\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;...\u0026lt;/scope\u0026gt; \u0026lt;systemPath\u0026gt;...\u0026lt;/systemPath\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; ... ","permalink":"https://rlawjddbs.github.io/posts/maven/2022-06-24/maven_scope/","summary":"\u003ch2 id=\"compile\"\u003ecompile\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e컴파일\u003c/code\u003e 할 경우 필요\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"runtime\"\u003eruntime\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e런타임\u003c/code\u003e 때 필요\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"provided\"\u003eprovided\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e컴파일\u003c/code\u003e 때 필요하긴 하지만 \u003ccode\u003e런타임\u003c/code\u003e 때는 \u003ccode\u003eJDK\u003c/code\u003e, 또는 \u003ccode\u003e컨테이너\u003c/code\u003e가 제공\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e서블릿\u003c/code\u003e이나 \u003ccode\u003eJSP 관련 API\u003c/code\u003e 같은 것\u003c/li\u003e\n\u003cli\u003e즉 \u003ccode\u003eWAS\u003c/code\u003e에서 제공하는 \u003ccode\u003eservlet-api.jar\u003c/code\u003e를 사용하는 경우에 해당\u003c/li\u003e\n\u003cli\u003e만약 \u003ccode\u003e운영환경\u003c/code\u003e에서 servlet-api.jar 중복으로 인한 문제가 발생한다면 꼭 \u003ccode\u003eprovided\u003c/code\u003e로 바꿔줘야 함\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"system\"\u003esystem\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003esystem\u003c/code\u003e은 provided와 유사하지만 \u003cstrong\u003e\u003ccode\u003eJAR 파일\u003c/code\u003e을 직접 사용\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e이 때는 JAR 파일의 위치를 지정하는 systemPath 속성을 지정해야함!!!\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"expomxml\"\u003eex(pom.xml)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003e...\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003e...\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e...\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003e...\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;systemPath\u0026gt;\u003c/span\u003e...\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/systemPath\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Maven Dependency scope"},{"content":"1. Github 프로젝트 생성 Project name: 닉네임.github.io gitlab은 private 가능한데 github는 public으로 해야 pages 설정이 가능하다.. 무료 사용자 기준 2. hugo 설치 참고 사이트 hugo official - 휴고 공식 사이트\nhomebrew를 이용하여 설치한다.\nbrew install hugo 3. hugo로 새 사이트 만들기 hugo 설치 완료 후 사이트를 배포하고 싶은 디렉토리를 생성하고 해당 디렉토리로 이동 후\nhugo new site 생성할사이트명 -f yml 여기서 -f yml 옵션은 선택적인 것인데 설정 파일을 .yml 포맷으로 쓰겠다는 뜻이다. 안쓰면 그냥 .toml 형식을 씀.\n4. git init # 3번 수행 후 생성된 사이트 디렉토리로 이동한 후 git init 3번 과정에서 생성된 디렉토리로 이동 후 git init 명령어를 입력한다. hugo의 테마를 적용하기 위해 git의 submodule을 이용해야 하는데 git init이 수행되지 않으면 당연히 서브 모듈을 못 쓴다.\n5. hugo의 테마 고르기 hugo theme\n각 테마별로 사이트 데모, 설치 방법등이 상이하지만 모든 테마는 깃 서브 모듈을 이용하여 적용된다.\n6. git sub-module 적용 # git init한 디렉토리에서 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive 위 명령어를 통해 themes 디렉토리에 Paper Mod 테마를 서브 모듈로 clone 했다.\n7. config.yml에 테마 설정 baseURL: https://사용자닉네임.github.io languageCode: en-us title: 제목 themes: \u0026#34;PaperMod\u0026#34; ... 실제 작성될 내용은 더 길다. baseURL, title을 수정하고 theme 속성을 추가한 뒤 속성값으로 사용할 테마명을 적어준다.\n8. github pages, actions 설정 레포지토리의 settings 탭 메뉴로 이동 후 pages와 actions 서브 메뉴로 이동하여 각각 아래와 같이 세팅 해주었다.\n9. github actions 작성 1번 과정에서 만든 깃허브 repository의 Actions 탭 메뉴로 이동하면 위처럼 액션을 세팅할 수 있다. main.yml을 기본적으로 만들어 주는데 아래와 같은 세팅을 한다.\nname: github pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public ","permalink":"https://rlawjddbs.github.io/posts/hugo/2022-05-20/hugo_deploy_to_github/","summary":"\u003ch1 id=\"1-github-프로젝트-생성\"\u003e1. Github 프로젝트 생성\u003c/h1\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/posts/Hugo/2022-05-20/images/create.png\" alt=\"Github 프로젝트 생성\"  /\u003e\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eProject name: \u003ccode\u003e닉네임\u003c/code\u003e.github.io\ngitlab은 private 가능한데 github는 public으로 해야 pages 설정이 가능하다.. 무료 사용자 기준\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"2-hugo-설치\"\u003e2. hugo 설치\u003c/h1\u003e\n\u003cp\u003e참고 사이트\n\u003ca href=\"https://hugo.io\"\u003ehugo official\u003c/a\u003e - 휴고 공식 사이트\u003cbr\u003e\n\u003ccode\u003ehomebrew\u003c/code\u003e를 이용하여 설치한다.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"3-hugo로-새-사이트-만들기\"\u003e3. hugo로 새 사이트 만들기\u003c/h1\u003e\n\u003cp\u003ehugo 설치 완료 후 사이트를 배포하고 싶은 디렉토리를 생성하고 해당 디렉토리로 이동 후\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site 생성할사이트명 -f yml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e여기서 \u003ccode\u003e-f yml\u003c/code\u003e 옵션은 선택적인 것인데 설정 파일을 \u003ccode\u003e.yml\u003c/code\u003e 포맷으로 쓰겠다는 뜻이다. 안쓰면 그냥 \u003ccode\u003e.toml\u003c/code\u003e 형식을 씀.\u003c/p\u003e","title":"Github pages 변경"}]